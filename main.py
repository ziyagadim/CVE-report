import re
from datetime import datetime
import requests
import os



def is_valid_cve(input_str):
    global user_input

    pattern = r'^(cve-|CVE-)?[0-9]{4}-[0-9]{4,}$'

    if re.match(pattern,input_str):
        if not input_str.startswith("CVE-"):
            user_input = input_str = "CVE-" + input_str 

    # check if year section of ID is valid
    if bool(re.match(pattern, input_str)):
        split_input = input_str.upper().split('-') or input_str.upper().split(' ')
        if 1999 <= int(split_input[1]) <= int(datetime.now().year):
            return bool(re.match(pattern, input_str))
        else:
            return False


def is_cve_exist(cve_id):
    api_url = f"https://cveawg.mitre.org/api/cve-id/{cve_id}"

    response = requests.get(api_url)

    # Check if the response status code is successful (200 OK)
    if response.status_code == 200:
        cve_data = response.json()

        # Check if Published
        if "PUBLISHED" in cve_data["state"]:
            print(f"CVE ID {cve_id} exists.")
            return True

        # Check if Rejected
        elif "REJECTED" in cve_data["state"]:
            print("it is rejected")
            return False

        # Check if Reserverd
        elif "RESERVED" in cve_data["state"]:
            print("it is rejected")
            return False



    else:
        print(f"CVE ID {cve_id} does not exist.")
        return False
    

# User input
user_input = input("Enter CVE ID: ")


# Check validation
if is_valid_cve(user_input):
    # Actions is input valid
    print("Valid CVE ID ")
    
    if is_cve_exist(user_input):
        # Actions if cve exist
        pass

else:
    # Actions if input invalid
    print("Invalid CVE ID")
    os.system("cls")

